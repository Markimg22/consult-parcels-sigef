name: Build e Release

on:
    push:
        branches:
            - master
            - develop

jobs:
    build:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: "macos-latest"
                      target: aarch64-apple-darwin
                    - platform: "windows-latest"
                      target: x86_64-pc-windows-msvc
        runs-on: ${{ matrix.platform }}
        steps:
            - name: Checkout do código
              uses: actions/checkout@v4

            - name: Rust setup
              uses: dtolnay/rust-toolchain@stable

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: "./src-tauri -> target"

            - name: Configurar Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Instalar dependências do projeto
              run: npm install

            - name: Configurar Rust e adicionar target
              run: rustup target add ${{ matrix.target }}

            - name: Build da aplicação Tauri
              uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  # Constrói para o target especificado na matriz
                  args: -t ${{ matrix.target }}

            - name: Upload de artefatos
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.target }}-build
                  path: ./src-tauri/target/${{ matrix.target }}/release/bundle/*

    release:
        permissions:
            contents: write
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout do código
              uses: actions/checkout@v4

            - name: Configurar Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Extrair versão do package.json
              id: version
              run: |
                  VERSION=$(jq -r '.version' package.json)
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "Versão extraída: $VERSION"

            - name: Download dos artefatos de build
              uses: actions/download-artifact@v4
              with:
                  # Usa um padrão para baixar todos os artefatos criados no job de build
                  name: "*-build"

            - name: Criar Tag Git
              run: |
                  TAG="v${{ steps.version.outputs.version }}"
                  git tag "$TAG"
                  git push origin "$TAG"

            - name: Criar Release no GitHub
              uses: softprops/action-gh-release@v2
              with:
                  # Inclui os artefatos baixados na release; ajuste o caminho se necessário
                  files: |
                      ./src-tauri/target/**/release/bundle/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
