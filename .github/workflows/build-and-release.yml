name: Build e Release

on:
    push:
        branches:
            - master

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.extract_version.outputs.version }}
        steps:
            - uses: actions/checkout@v4

            - name: Configurar Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Configurar Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Instalar dependências
              run: npm install

            - name: Adicionar targets do Rust
              run: |
                  rustup target add aarch64-apple-darwin
                  rustup target add x86_64-pc-windows-msvc

            - name: Build da aplicação Tauri
              uses: tauri-apps/tauri-action@v0
              with:
                  args: -t aarch64-apple-darwin -t x86_64-pc-windows-msvc

            - name: Fazer upload dos artefatos
              uses: actions/upload-artifact@v3
              with:
                  name: build-artifacts
                  path: ./src-tauri/target/*/release/bundle/*

            - name: Extrair versão do package.json
              id: extract_version
              run: |
                  VERSION=$(jq -r '.version' package.json)
                  echo "Versão extraída: $VERSION"
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

    release:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v4

            - name: Baixar artefatos do build
              uses: actions/download-artifact@v3
              with:
                  name: build-artifacts

            - name: Criar tag
              run: |
                  git tag "v${{ needs.build.outputs.version }}"
                  git push origin "v${{ needs.build.outputs.version }}"

            - name: Criar release no GitHub
              uses: softprops/action-gh-release@v2
              with:
                  files: |
                      ./src-tauri/target/*/release/bundle/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
